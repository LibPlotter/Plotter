Далее перечиляются объекты, с которыми работает программа и их представление для передачи в программу.

Массив точек графика: 
real, dimension(m, n, k), allocatable :: <название_переменной> - трёхмерный массив. 
Для измерения m разрешена размерность 3, определяет к какой оси в трёхмерном пространстве относится хранящаяся в ячейке памяти величина. 
По индексу 1 хранится величина для оси Х, по индексу 2 - для оси Y, по индексу 3 - для оси Z. 
Измерение n определяет номер точки к которой относится координата. 
Измерение k определяет номер графика, к которому относится точка. 
Данный формат используется для описания точечных графиков. 
При передаче одного графика можно опустить измерение k. 

Массив интервалов разрыва графика: 
real, dimension(m,n,k), allocatable :: <название переменной> - трёхмерный массив. 
Для измерения m разрешена размерность 6, определяет к какой оси в трёхмерном пространстве и к какой границе интервала относится хранящаяся в ячейке памяти величина.  
Измерение n определяет номер интервала, к которому относится величина. 
Измерение k определяет номер графика, к которому относится интервал.
Измерение m определяет координату и границу следующим образом:
(1,n,k) - координата на оси Х левой границы ограничения номер n для графика номер k.
(2,n,k) - координата на оси Х правой границы  ограничения номер n  для графика номер k.
(3,n,k) - координата на оси Y левой границы ограничения номер n для графика номер k.
(4,n,k) - координата на оси Y правой границы  ограничения номер n, для графика номер k.
(5,n,k) - координата на оси Z левой границы ограничения номер n, для графика номер k.
(6,n,k) - координата на оси Z правой границы ограничения номер n, для графика номер k.
Если координаты оси левой и правой грани равны, то ограничение по этой координате игнорируется. 
Рекомендуется чтобы количество ограничений для графиков было одинаковым. 
Количество наборов ограничений должно быть меньше количества изображаемых графиков.

Массив точек исключения: 
logical, dimension(m,n), allocatable:: <название переменной> - двумерный массив. 
Измерение m определяет номер точки в наборе, статус которой будет изменён. 
Измерение n определяет номер набора точек, к которому будет применён данный набор точек исключений. 
Элемент массива принимает одно из двух возможных значений:
.TRUE. - означающее, что данная точка будет исключена при построении графика
.FALSE. - означающее, что данная точка будет учитываться при построении графика. 

Для передачи функций используется специальный тип.
Тип functions содержит в себе три поля - указателя:
1) function_y - указатель на функцию вида y=f(x). 
Функция устанавливает зависимость координаты оси Y от координаты оси X. 
Данное поле принимает любые функции, принимающие и возвращающие одно значение типа real. 
Указатель в этом поле используется для построения графика функции.
2) function_z - указатель на функцию вида z=f(x). 
Функция устанавливает зависимость координаты оси Z от координаты оси X.  
Данное поле принимает любые функции, принимающие и возвращающие одно значение типа real. 
Указатель в этом поле используется для построения трёхмерного графика функции.
3) function_surface - указатель на функцию вида z=f(x,y). 
Функция устанавливает зависимость координаты оси Z от координат на осях X и Y. 
Данное поле принимает любые функции, принимающие два значения типа real и возвращающие одно значение типа real. 
Указатель в этом поле используется для построения поверхности.
Тип принимает функции, заданные двумя способами:
1) функции, которые находятся в модуле, подключенном к главной программе;
2) функции, находящиеся вне модулей, которые были объявлены в программе командой real, external :: <имя функции>
Функции должны удовлетворять одному из следующих интерфейсов:
interface
	function graphic(x) result (y)
		real,intent(in):: x
		real :: y
		!Переменная х – входная точка на оси абсцисс
		!Переменная y содержит результат.
	end function func
	function surface(x,y) result(z)
		real,intent(in):: x,y
		real::z
		!Переменная x и y – входные точки по осям абсцисс и ординат
		!Действия с x и y. Переменная z содержит результат.
	end function surface
end interface

Наборы параметров для DrawGraph:
1) для рисования графика одной функции используется подпрограмма DrawGraph(i_window_width,i_window_height,i_diapason_x_start,i_diapason_x_end,i_function);
2) для рисования графиков нескольких функций используется подпрограмма DrawGraph(i_window_width,i_window_height, i_diapason_x_start,i_diapason_x_end,i_functions,i_functions_number);
3) для рисования графика функции с интервалами исключения используется подпрограмма DrawGraph(i_window_width,i_window_height, i_diapason_x_start,i_diapason_x_end,i_function,i_exclude_intervals,i_exclude_pairs_number);
4) для рисования графиков нескольких функций с интервалами исключения используется подпрограмма DrawGraph(i_window_width, i_window_height,i_diapason_x_start,i_diapason_x_end,i_functions,i_functions_number,i_exclude_intervals,i_exclude_pairs_number);
5) для рисования графика по точкам используется подпрограмма DrawGraph(i_window_width,i_window_height,i_points_xyz,i_point_number);
6) для построения графика по точкам с исключёнными точками используется подпрограмма DrawGraph(i_window_width,i_window_height, i_points_xyz,i_point_number,i_perfocard);
7) для построения графика по точкам с интервалами исключения используется подпрограмма DrawGraph(i_window_width,i_window_height, i_points_xyz,i_point_number,i_exclude_intervals,i_exclude_pairs_number);
8) для построения графиков по нескольким наборам точек используется подпрограмма DrawGraph(i_window_width,i_window_height,i_points_xyz, i_point_number,i_set_number);
9) для построения графиков по нескольким наборам точек с исключёнными точками используется подпрограмма DrawGraph(i_window_width, i_window_height,i_points_xyz,i_point_number,i_set_number,i_perfocards);
10) для построения графиков по нескольким наборам точек с интервалами исключения используется подпрограмма DrawGraph(i_window_width, i_window_height,i_points_xyz,i_point_number,i_set_number,i_exclude_intervals,i_exclude_pairs_number);
11) для построения поверхности используется подпрограмма DrawGraph(i_window_width,i_window_height,i_diapason_x_start,i_diapason_x_end,i_diapason_y_start,i_diapason_y_end,i_surface);
12) для построения нескольких поверхностей используется подпрограмма DrawGraph(i_window_width,i_window_height,i_diapason_x_start,i_diapason_x_end,i_diapason_y_start,i_diapason_y_end,i_surfaces,i_surface_number).

Краткое описание параметров:
i_window_width - тип integer, ширина окна
i_window_height - тип integer, высота окна
i_diapason_x_start - тип real, начало диапазона для оси Х
i_diapason_x_end - тип real, конец диапазона для оси Х
i_diapason_y_start - тип real, начало диапазона для оси У
i_diapason_y_end - тип real, конец диапазона для оси У
i_function - тип type(functions) – указатель на функцию, по которой для y и z будет строиться график
i_functions - тип type(functions) - массив указателей на функции, по которым для y и z будет строиться графмк
i_surface - тип type(functions) -  указатель на функция поверхности
i_surfaces - тип type(functions) - массив функций поверхности
i_surface_number - тип integer, количество поверхностей для отрисовки
i_functions_number - тип integer, число функций для отрисовки
i_exclude_intervals - тип real, массив интервалов исключения
i_exclude_pairs_number - тип integer, количество интервалов исключения
i_points_xyz - тип real, массив точек
i_point_number - тип integer, количество точек
i_perfocard - тип logical, массив точек исключения
i_set_number - тип integer, количество наборов для отрисовки.